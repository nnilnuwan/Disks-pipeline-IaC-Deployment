trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  backendResourceGroup: 'backend-storage'
  storageAccount: 'adostorage01'
  containerName: 'backend'
  tfstateKey: 'vm_with_disks.tfstate'
  backendServiceConnection: '25-Sponsorship-A(4)(0dff3de7-eade-40a0-822b-87187ef66758)'
  planServiceConnection: '25-Sponsorship-A(4)(0dff3de7-eade-40a0-822b-87187ef66758)'
  applyServiceConnection: '25-Sponsorship-A(4)(0dff3de7-eade-40a0-822b-87187ef66758)'

parameters:
  - name: disk_names
    displayName: "Disk Name"
    type: string
    default: "vmname-diskname-no"

  - name: vm_name
    displayName: "Virtual Machine Name"
    type: string
    default: "demo-vm1"
    values:
      - demo-vm1
      - PROD-DB-SVR
      - PROD-APP-SVR
      - PROD-CRYSTAL-SVR
      - PROD-DEMAND-SVR
      - UAT-DB-SVR
      - UAT-APP-SVR
      - DR-DB-SVR
      - DR-APP-SVR
      - TEST-DB-SVR
      - TEST-APP-SVR
      - DMZ-MGT-SVR01
      - HNB-SFTP-SVR
      - DOC-MGT-SVR
      - FW-SVR
      - PRD-RODC-SVR

  - name: resource_group_name
    displayName: "Resource Group Name"
    type: string
    values:
      - test-RG
      - prd-RG
      - dev-RG
      - qa-RG

  - name: region
    displayName: "Azure Region"
    type: string
    default: "Southeast Asia"

  - name: disk_type
    displayName: "Disk Type"
    type: string
    default: "Standard_LRS"
    values:
      - Standard_LRS
      - StandardSSD_LRS
      - StandardSSD_ZRS
      - Premium_LRS
      - Premium_ZRS
      - PremiumV2_LRS
      - UltraSSD_LRS

  - name: disk_count
    displayName: "Disk Count"
    type: number
    default: 1
    values:
      - 1
      - 2
      - 3
      - 4
      - 5

  - name: disk_size_gb
    displayName: "Disk Size (GB)"
    type: number
    values:
      - 4
      - 8
      - 16
      - 32
      - 64
      - 128
      - 256
      - 512
      - 1024
      - 2048
      - 4096
      - 8192

steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '1.5.7'

- task: TerraformTaskV4@4
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendAzureRmUseEntraIdForAuthentication: true
    backendServiceArm: $(backendServiceConnection)
    backendAzureRmResourceGroupName: $(backendResourceGroup)
    backendAzureRmStorageAccountName: $(storageAccount)
    backendAzureRmContainerName: $(containerName)
    backendAzureRmKey: $(tfstateKey)

- script: |
    echo "VM NAME: ${{ parameters.vm_name }}"
    echo "RESOURCE GROUP: ${{ parameters.resource_group_name }}"
    echo "REGION: ${{ parameters.region }}"
    echo "DISK TYPE: ${{ parameters.disk_type }}"
    echo "DISK COUNT: ${{ parameters.disk_count }}"
    echo "DISK SIZE (GB): ${{ parameters.disk_size_gb }}"
  displayName: '🔍 Debug: Show input values'

- task: TerraformTaskV4@4
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: $(planServiceConnection)
    commandOptions: >
      -var="vm_name=${{ parameters.vm_name }}"
      -var="resource_group_name=${{ parameters.resource_group_name }}"
      -var="region=${{ parameters.region }}"
      -var="disk_type=${{ parameters.disk_type }}"
      -var="disk_count=${{ parameters.disk_count }}"
      -var="disk_size_gb=${{ parameters.disk_size_gb }}"
      -var="disk_names=${{ parameters.disk_names }}"

- task: TerraformTaskV4@4
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: $(applyServiceConnection)
    commandOptions: >
      -var="vm_name=${{ parameters.vm_name }}"
      -var="resource_group_name=${{ parameters.resource_group_name }}"
      -var="region=${{ parameters.region }}"
      -var="disk_type=${{ parameters.disk_type }}"
      -var="disk_count=${{ parameters.disk_count }}"
      -var="disk_size_gb=${{ parameters.disk_size_gb }}"
      -var="disk_names=${{ parameters.disk_names }}"
